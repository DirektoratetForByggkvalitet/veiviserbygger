@use '@/styles/1_settings/mixins';
@use '@/styles/1_settings/colors';
@use '@/styles/1_settings/vars';

.dropdown {
    $this: &;
    display: block;
    width: 100%;

    &__trigger {
        @include mixins.font-size(base);
        position: relative;
        display: grid;
        border: vars.$border-style;
        text-align: left;
        width: 100%;
        background-color: colors.$light;

        &:hover {
            border-color: shade(colors.get(neutral), 6%);

            #{$this}__label {
                color: shade(colors.$muted, 20%);
            }
        }

        &--expanded {
            z-index: vars.$level-3 + 1;

            border-radius: 2px;
            box-shadow: 0 0 0 1px colors.get(primary);

            &,
            &:hover {
                border-color: colors.get(primary);
            }

            #{$this}__label {
                color: colors.$text;
            }
        }
    }

    &__label {
        @include mixins.font-size(small);
        color: colors.$muted;
        padding: vars.$form-padding-y vars.$form-padding-x 3px;
    }

    &__value {
        border-radius: 0;
        padding: vars.$form-padding-y vars.$form-padding-x vars.$form-padding-y;
        background-color: transparent;

        @include mixins.input-placeholder {
            color: colors.$muted;
        }
    }

    &__icon {
        position: absolute;
        display: flex;
        align-items: center;
        top: 0;
        right: 0;
        height: 100%;
        padding-right: vars.$form-padding-x;
    }

    &__animation {
        position: relative;

        &--expanded {
            z-index: vars.$level-3;
        }
    }

    &__options {
        @include mixins.font-size(small);
        display: flex;
        flex-direction: column;
        align-items: stretch;
        color: colors.$text;
        border: vars.$border-style;
        border-radius: 4px;
        background-color: colors.$light;
        box-shadow: vars.$shadow--small;

        max-height: min(50vh, 600px);
        overflow-x: hidden;
        overflow-y: auto;

        @include mixins.overflow-scroll;
        overscroll-behavior: contain;
    }

    &__wrapper {
        position: absolute;
        top: 1px;
        left: 0;
        outline: 0;
        z-index: 2;
        width: 100%;
        min-width: fit-content;
        max-width: 500px;

        @include mixins.entering {
            animation: enter 300ms vars.$ease-out-quart both;
        }

        @include mixins.exiting {
            animation: exit 300ms vars.$ease-in-out-quint--custom forwards;
        }

        &--left {
            transform-origin: left center;
        }

        &--right {
            transform-origin: right center;
            left: auto;
            right: 0;
        }

        &--above {
            margin-top: 0;
            top: auto;
            bottom: 45px;
        }
    }

    &__option-group {
        @include mixins.font-size(xsmall);
        color: colors.$muted;
        white-space: nowrap;
        text-align: left;
        padding: vars.$spacing--xsmall;
        background: colors.get(neutral, xlight);
    }

    &__option {
        @include mixins.font-size(small);
        display: inline-flex;
        white-space: nowrap;
        text-align: left;
        padding: vars.$form-padding-y vars.$form-padding-x;

        &:not(:last-child) {
            border-bottom: vars.$border-style--weak;
        }

        &--disabled {
            color: colors.$muted;
        }

        &:hover:not(#{$this}__option--disabled),
        &:focus:focus-visible:not(#{$this}__option--disabled),
        &--selected {
            color: colors.$light;
            background-color: colors.get(primary, dark);
        }

        &--delete,
        &--delete:hover,
        &--delete:focus:focus-visible {
            color: colors.$warning;
        }
    }

    &__option-icon {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        line-height: 100%;
        margin-right: vars.$spacing--xsmall;
    }

    &--simple,
    &--sentence,
    &--iconOnly {
        width: fit-content;

        #{$this}__trigger {
            @include mixins.font-size(small);
            display: flex;
            align-items: center;
            border: none;
            width: auto;
            height: 100%;
        }

        #{$this}__value {
            padding: 0 20px 0 6px;
        }

        #{$this}__icon {
            padding: 0;
        }
    }

    &--sentence {
        #{$this}__trigger {
            @include mixins.font-size(small);
            border-radius: vars.$border-radius;
            background-color: colors.get(neutral, xlight);
            padding: 4px 4px;
            height: 35px;
        }

        #{$this}__trigger:hover,
        #{$this}__trigger:focus {
            background-color: colors.get(neutral, light);
        }

        #{$this}__label {
            color: colors.get(neutral, light);
        }

        #{$this}__value {
            max-width: 180px;
            overflow-x: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            padding: 0 24px 0 6px;
        }

        #{$this}__icon {
            padding-right: 8px;
        }
    }

    &--iconOnly {
        #{$this}__trigger {
            justify-content: center;
            height: 35px;
            width: 35px;
            border-radius: vars.$border-radius;
            background-color: transparent;
        }

        #{$this}__trigger:hover,
        #{$this}__trigger:focus {
            background-color: colors.get(neutral, xlight);
        }

        #{$this}__icon {
            position: static;
        }

        #{$this}__wrapper {
            top: vars.$spacing--xsmall;
        }

        #{$this}__wrapper--above {
            top: auto;
            bottom: calc(35px + vars.$spacing--xsmall);
        }
    }

    &--read-only {
        padding: 0;
        #{$this}__trigger,
        #{$this}__trigger:hover,
        #{$this}__trigger:focus {
            border: 1px solid colors.get(neutral, light);
            background-color: transparent;
        }
        #{$this}__value {
            padding: 0 6px 0 6px;
            color: colors.$text;
        }
    }
}

@keyframes enter {
    from {
        box-shadow: 0 0 0 rgba(black, 0);
        clip-path: inset(-20px -20px 100% -20px);
    }

    to {
        clip-path: inset(-20px -20px -20px -20px);
    }
}

@keyframes exit {
    from {
        clip-path: inset(-20px -20px -20px -20px);
    }

    to {
        clip-path: inset(-20px -20px calc(100% + 10px) -20px);
    }
}
