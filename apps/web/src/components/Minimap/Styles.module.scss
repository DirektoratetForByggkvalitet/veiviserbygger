@use '@/styles/1_settings/colors';
@use '@/styles/1_settings/mixins';
@use '@/styles/1_settings/vars';

.minimap {
    $this: &;
    display: flex;
    width: 100%;
    height: calc(100vh - #{vars.$header-height});
    overflow: auto;
    transition: width 500ms vars.$ease-in-out-quint--custom;
    background-color: colors.get(primary, xlight);
    margin-left: 0;

    @include mixins.no-select;

    &__title {
        @include mixins.font(base, normal);
        @include mixins.font-size(small, 1);
        display: flex;
        align-items: center;
        gap: vars.$spacing--xsmall;
        height: vars.$header-height;
    }

    &__title-type {
        color: colors.$text;

        &--tag {
            background-color: colors.$light;
            color: colors.$text;
            border: vars.$border-style;
            border-radius: 2px;
            font-size: 10px;
            padding: 4px 5px;
        }
    }

    &__title-text {
        @include mixins.text-overflow;
        flex-grow: 1;
        padding: 3px 0;
    }

    &__title-icon {
        color: colors.$muted;
    }

    &__page {
        position: relative;
        cursor: pointer;
        display: flex;
        flex-direction: column;
        width: var(--minimap-page-width);
        flex-shrink: 0;
        padding: 0 vars.$margin;
        transition: background-color 200ms vars.$ease-in-out-quint--custom;
        background-color: colors.get(neutral, xlight);

        &:not(:last-child) {
            border-right: vars.$border-style;
        }

        &:hover,
        &:focus:focus-visible {
            background-color: colors.get(neutral, light);
        }

        &--placeholder {
            // background-color: colors.$light;

            &:hover,
            &:focus:focus-visible {
                background-color: colors.get(neutral, light);
            }
        }

        &--selected {
            &,
            &:hover,
            &:focus:focus-visible {
                background-color: colors.get(primary, light);
            }
        }

        &--dirty {
            &:before {
                content: 'Prøver å lagre ...';
                font-size: 12px;
                line-height: 1;
                text-transform: uppercase;
                position: absolute;
                top: 8px;
                right: 8px;
                animation: dirtyFadeIn 600ms vars.$ease-out-quart backwards;
                animation-delay: 1000ms;
                background: colors.$warning;
                color: colors.$light;
                padding: 4px 8px;
                border-radius: 4px;
            }
        }

        // &:has(+ #{$this}__page--selected) {
        //       border-color: colors.get(primary, light);
        // }
    }

    &__sub-title {
        $line-height: 1.3;
        @include mixins.font(base, normal);
        @include mixins.font-size(xsmall, $line-height);
        @include mixins.line-clamp(2);
        text-wrap: balance;
        flex-grow: 1;
        height: (1em * 2) * $line-height;

        &--placeholder {
            color: colors.$muted;
        }
    }

    &__item {
        display: flex;
        gap: 8px;
        align-items: flex-start;
        padding: 8px 8px 10px;
        background-color: colors.$light;
        border: vars.$border-style;
        margin-bottom: 6px;
        border-radius: 6px;
        box-shadow: none;

        @include mixins.min-width(md) {
            padding: 9px 10px 11px;
        }

        &--branch {
            background-color: transparent;
            border: vars.$border-style--dashed;
            margin-top: 14px;
            margin-bottom: 14px;

            #{$this}__sub-title {
                height: auto;
            }
        }

        &--negative {
            #{$this}__icon {
                color: colors.$warning;
            }
            #{$this}__sub-title {
                color: colors.$warning;
            }
        }

        &--draggable {
            cursor: grab;
            position: relative;

            &:hover,
            &:focus-visible {
                #{$this}__icon {
                    background-color: colors.get(neutral-transparent, light);
                }
            }

            &[aria-pressed='true'] {
                z-index: vars.$level-1;
                box-shadow: vars.$shadow;
                border-color: colors.get(primary, base);
            }

            &#{$this}__item--branch {
                &:hover,
                &:focus-visible {
                    background: colors.get(neutral, light);
                }
            }
        }
    }

    &__icon {
        text-align: right;
        flex-shrink: 0;
        width: 16px;
        padding: 2px 0;
        color: colors.$muted;
        transition: background-color 200ms vars.$ease-in-out-quint--custom;
        border-radius: 4px;
    }

    &__content {
        flex-grow: 1;

        &--placeholder {
            border-radius: vars.$border-radius;
            // border: vars.$border-style--dashed;
            transition: background-color 200ms vars.$ease-in-out-quint--custom;
        }
    }

    &__placeholder {
        @include mixins.font(base, normal);
        @include mixins.font-size(xsmall, 1);
        display: flex;
        align-items: center;
        padding: vars.$spacing--xsmall;
        border-radius: vars.$border-radius;
        border: vars.$border-style--dashed;
        transition: background-color 400ms vars.$ease-in-out-quint--custom;
    }

    &__placeholder-text {
        flex-grow: 1;
    }

    &--selected {
        overflow: hidden;
        overscroll-behavior: contain;
        transition: none;

        width: calc(100vw - vars.$panel-width);
    }

    &--header-message-visible {
        height: calc(100vh - (#{vars.$header-height} * 2));
    }
}

@keyframes fade-in {
    from {
        opacity: 0;
    }
}
